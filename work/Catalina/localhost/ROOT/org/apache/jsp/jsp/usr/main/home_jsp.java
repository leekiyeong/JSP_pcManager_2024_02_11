/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.18
 * Generated at: 2024-02-13 14:05:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.usr.main;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("  <link href=\"/css/main.css\" rel=\"stylesheet\">\r\n");
      out.write("  <title>pc관리 프로그램</title>\r\n");
      out.write("  <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("  <script>\r\n");
      out.write("    document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("        // 클릭 이벤트 핸들러 등록\r\n");
      out.write("        const memberDiv = document.querySelector('.member');\r\n");
      out.write("        const nonMembersDiv = document.querySelector('.nonMembers');\r\n");
      out.write("        const loginModal = document.getElementById('loginModal');\r\n");
      out.write("        const signupModal = document.getElementById('signupModal');\r\n");
      out.write("\r\n");
      out.write("        memberDiv.addEventListener('click', () => {\r\n");
      out.write("            loginModal.style.display = 'block'; // 로그인 모달 표시\r\n");
      out.write("            document.body.classList.add('modal-open'); // 스크롤 막기\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        nonMembersDiv.addEventListener('click', () => {\r\n");
      out.write("            signupModal.style.display = 'block'; // 회원가입 모달 표시\r\n");
      out.write("            document.body.classList.add('modal-open'); // 스크롤 막기\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 모달 창 닫기\r\n");
      out.write("        const closeModalButtons = document.querySelectorAll('.close');\r\n");
      out.write("        closeModalButtons.forEach((button) => {\r\n");
      out.write("            button.addEventListener('click', () => {\r\n");
      out.write("                loginModal.style.display = 'none'; // 로그인 모달 숨기기\r\n");
      out.write("                signupModal.style.display = 'none'; // 회원가입 모달 숨기기\r\n");
      out.write("                document.body.classList.remove('modal-open'); // 스크롤 허용\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 모달 외부 클릭 시 모달 닫기\r\n");
      out.write("        window.addEventListener('click', (event) => {\r\n");
      out.write("            if (event.target === loginModal || event.target === signupModal) {\r\n");
      out.write("                loginModal.style.display = 'none'; // 로그인 모달 숨기기\r\n");
      out.write("                signupModal.style.display = 'none'; // 회원가입 모달 숨기기\r\n");
      out.write("                document.body.classList.remove('modal-open'); // 스크롤 허용\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 로그인 양식 제출 시 처리\r\n");
      out.write("        const loginForm = document.getElementById('loginForm');\r\n");
      out.write("        loginForm.addEventListener('submit', (event) => {\r\n");
      out.write("            event.preventDefault(); // 기본 동작 방지 (페이지 새로고침 방지)\r\n");
      out.write("\r\n");
      out.write("            // 로그인 폼 데이터 가져오기\r\n");
      out.write("            const username = document.getElementById('username').value;\r\n");
      out.write("            const password = document.getElementById('password').value;\r\n");
      out.write("\r\n");
      out.write("            // AJAX 요청 보내기 (jQuery 사용)\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                type: 'POST', // HTTP 요청 메서드 (POST로 변경할 수 있음)\r\n");
      out.write("                url: '/userLogin', // 컨트롤러 엔드포인트 URL\r\n");
      out.write("                data: { username: username, password: password }, // 전송할 데이터\r\n");
      out.write("                success: function(response) {\r\n");
      out.write("                    // 성공적으로 응답을 받았을 때 처리\r\n");
      out.write("                    alert('로그인 성공: ' + response);\r\n");
      out.write("                },\r\n");
      out.write("                error: function(error) {\r\n");
      out.write("                    // 오류 발생 시 처리\r\n");
      out.write("                    alert('로그인 실패: ' + error.responseText);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 회원가입 양식 제출 시 처리\r\n");
      out.write("        const signupForm = document.getElementById('signupForm');\r\n");
      out.write("        signupForm.addEventListener('submit', (event) => {\r\n");
      out.write("            event.preventDefault(); // 기본 동작 방지 (페이지 새로고침 방지)\r\n");
      out.write("\r\n");
      out.write("            // 회원가입 폼 데이터 가져오기\r\n");
      out.write("            const name = document.getElementById('signupName').value;\r\n");
      out.write("            const username = document.getElementById('signupUsername').value;\r\n");
      out.write("            const password = document.getElementById('signupPassword').value;\r\n");
      out.write("            const phone = document.getElementById('signupPhone').value;\r\n");
      out.write("\r\n");
      out.write("            // 유효성 검사 및 처리\r\n");
      out.write("            // (이 부분에 유효성 검사 코드를 추가하세요)\r\n");
      out.write("            // AJAX 요청 보내기 (jQuery 사용)\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                type: 'POST', // HTTP 요청 메서드 (POST로 변경할 수 있음)\r\n");
      out.write("                url: '/userSignup', // 컨트롤러 엔드포인트 URL\r\n");
      out.write("                data: { name: name, username: username, password: password, phone: phone }, // 전송할 데이터\r\n");
      out.write("                success: function(response) {\r\n");
      out.write("                    // 성공적으로 응답을 받았을 때 처리\r\n");
      out.write("                    alert('회원가입 성공: ' + response);\r\n");
      out.write("                },\r\n");
      out.write("                error: function(error) {\r\n");
      out.write("                    // 오류 발생 시 처리\r\n");
      out.write("                    alert('회원가입 실패: ' + error.responseText);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("   });\r\n");
      out.write("\r\n");
      out.write("  </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"header\">\r\n");
      out.write("  <span style=\"font-size: 30px;\">★</span> 오른쪽 메뉴에서 구매품목을 선택해주세요. <span\r\n");
      out.write("    style=\"font-size: 30px;\">★</span>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("  <div class=\"grid-leftcontainer\">\r\n");
      out.write("    <!-- 좌측1열 위치할 5개의 사각형 -->\r\n");
      out.write("    <div class=\"grid-item left-Firstrow\">1</div>\r\n");
      out.write("    <div class=\"grid-item left-Firstrow\">2</div>\r\n");
      out.write("    <div class=\"grid-item left-Firstrow\">3</div>\r\n");
      out.write("    <div class=\"grid-item left-Firstrow\">4</div>\r\n");
      out.write("    <div class=\"grid-item left-Firstrow\">5</div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 좌측2열 위치할 5개의 사각형 -->\r\n");
      out.write("    <div class=\"grid-item left-Secondrow\">6</div>\r\n");
      out.write("    <div class=\"grid-item left-Secondrow\">7</div>\r\n");
      out.write("    <div class=\"grid-item left-Secondrow\">8</div>\r\n");
      out.write("    <div class=\"grid-item left-Secondrow\">9</div>\r\n");
      out.write("    <div class=\"grid-item left-Secondrow\">10</div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 좌측3열 위치할 5개의 사각형 -->\r\n");
      out.write("    <div class=\"grid-item left-Thirdrow\">11</div>\r\n");
      out.write("    <div class=\"grid-item left-Thirdrow\">12</div>\r\n");
      out.write("    <div class=\"grid-item left-Thirdrow\">13</div>\r\n");
      out.write("    <div class=\"grid-item left-Thirdrow\">14</div>\r\n");
      out.write("    <div class=\"grid-item left-Thirdrow\">15</div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 좌측4열 위치할 5개의 사각형 -->\r\n");
      out.write("    <div class=\"grid-item left-Fourthrow\">16</div>\r\n");
      out.write("    <div class=\"grid-item left-Fourthrow\">17</div>\r\n");
      out.write("    <div class=\"grid-item left-Fourthrow\">18</div>\r\n");
      out.write("    <div class=\"grid-item left-Fourthrow\">19</div>\r\n");
      out.write("    <div class=\"grid-item left-Fourthrow\">20</div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 좌측5열 위치할 5개의 사각형 -->\r\n");
      out.write("    <div class=\"grid-item left-Fifthrow\">21</div>\r\n");
      out.write("    <div class=\"grid-item left-Fifthrow\">22</div>\r\n");
      out.write("    <div class=\"grid-item left-Fifthrow\">23</div>\r\n");
      out.write("    <div class=\"grid-item left-Fifthrow\">24</div>\r\n");
      out.write("    <div class=\"grid-item left-Fifthrow\">25</div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 좌측6열 위치할 5개의 사각형 -->\r\n");
      out.write("    <div class=\"grid-item left-Sixthrow\">26</div>\r\n");
      out.write("    <div class=\"grid-item left-Sixthrow\">27</div>\r\n");
      out.write("    <div class=\"grid-item left-Sixthrow\">28</div>\r\n");
      out.write("    <div class=\"grid-item left-Sixthrow\">29</div>\r\n");
      out.write("    <div class=\"grid-item left-Sixthrow\">30</div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"grid-rightcontainer\">\r\n");
      out.write("    <!-- 우측1열 위치할 5개의 사각형 -->\r\n");
      out.write("    <div class=\"grid-item right-Firstrow\">31</div>\r\n");
      out.write("    <div class=\"grid-item right-Firstrow\">32</div>\r\n");
      out.write("    <div class=\"grid-item right-Firstrow\">33</div>\r\n");
      out.write("    <div class=\"grid-item right-Firstrow\">34</div>\r\n");
      out.write("    <div class=\"grid-item right-Firstrow\">35</div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 우측2열 위치할 5개의 사각형 -->\r\n");
      out.write("    <div class=\"grid-item right-Secondrow\">36</div>\r\n");
      out.write("    <div class=\"grid-item right-Secondrow\">37</div>\r\n");
      out.write("    <div class=\"grid-item right-Secondrow\">38</div>\r\n");
      out.write("    <div class=\"grid-item right-Secondrow\">39</div>\r\n");
      out.write("    <div class=\"grid-item right-Secondrow\">40</div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 우측3열 위치할 5개의 사각형 -->\r\n");
      out.write("    <div class=\"grid-item right-Thirdrow\">41</div>\r\n");
      out.write("    <div class=\"grid-item right-Thirdrow\">42</div>\r\n");
      out.write("    <div class=\"grid-item right-Thirdrow\">43</div>\r\n");
      out.write("    <div class=\"grid-item right-Thirdrow\">44</div>\r\n");
      out.write("    <div class=\"grid-item right-Thirdrow\">45</div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 우측4열 위치할 5개의 사각형 -->\r\n");
      out.write("    <div class=\"grid-item right-Fourthrow\">46</div>\r\n");
      out.write("    <div class=\"grid-item right-Fourthrow\">47</div>\r\n");
      out.write("    <div class=\"grid-item right-Fourthrow\">48</div>\r\n");
      out.write("    <div class=\"grid-item right-Fourthrow\">49</div>\r\n");
      out.write("    <div class=\"grid-item right-Fourthrow\">50</div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 우측5열 위치할 5개의 사각형 -->\r\n");
      out.write("    <div class=\"grid-item right-Fifthrow\">51</div>\r\n");
      out.write("    <div class=\"grid-item right-Fifthrow\">52</div>\r\n");
      out.write("    <div class=\"grid-item right-Fifthrow\">53</div>\r\n");
      out.write("    <div class=\"grid-item right-Fifthrow\">54</div>\r\n");
      out.write("    <div class=\"grid-item right-Fifthrow\">55</div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 우측6열 위치할 5개의 사각형 -->\r\n");
      out.write("    <div class=\"grid-item right-Sixthrow\">56</div>\r\n");
      out.write("    <div class=\"grid-item right-Sixthrow\">57</div>\r\n");
      out.write("    <div class=\"grid-item right-Sixthrow\">58</div>\r\n");
      out.write("    <div class=\"grid-item right-Sixthrow\">59</div>\r\n");
      out.write("    <div class=\"grid-item right-Sixthrow\">60</div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <!-- 우측 회원,비회원 로고,현위치 -->\r\n");
      out.write("  <div class=\"grid-bottomcontainer\">\r\n");
      out.write("    <div class=\"member\">\r\n");
      out.write("      <img src=\"/images/member-icon.jpg\">회원\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"nonMembers\">\r\n");
      out.write("      <img src=\"/images/nonMember-icon.jpg\">비회원\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"myLocation\">\r\n");
      out.write("      <img src=\"/images/myLocation.jpg\">현위치\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <!-- 로그인 모달 -->\r\n");
      out.write("  <div id=\"loginModal\" class=\"modal\">\r\n");
      out.write("    <div class=\"modal-LoginContent\">\r\n");
      out.write("      <span class=\"close\">&times;</span>\r\n");
      out.write("      <!-- 로그인 모달 내용을 추가하세요 -->\r\n");
      out.write("      <h2>로그인</h2>\r\n");
      out.write("      <form id=\"loginForm\" action=\"/userLogin\" method=\"post\">\r\n");
      out.write("        <label for=\"username\">사용자 아이디</label> <input type=\"text\"\r\n");
      out.write("                                                     id=\"username\" name=\"username\" required><br> <label\r\n");
      out.write("          for=\"password\">비밀번호</label> <input type=\"password\" id=\"password\"\r\n");
      out.write("                                             name=\"password\" required><br> <input type=\"submit\"\r\n");
      out.write("                                                                                  value=\"로그인\">\r\n");
      out.write("      </form>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <!-- 회원가입 모달 -->\r\n");
      out.write("  <div id=\"signupModal\" class=\"modal\">\r\n");
      out.write("    <div class=\"modal-SignUpContent\">\r\n");
      out.write("      <span class=\"close\">&times;</span>\r\n");
      out.write("      <h2>회원가입</h2>\r\n");
      out.write("      <form name=\"frm\" id=\"signupForm\">\r\n");
      out.write("        <label for=\"signupName\">이름:</label> <input type=\"text\"\r\n");
      out.write("                                                   id=\"signupName\" name=\"signupName\" placeholder=\"이름을 입력하세요\" required><br>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"signupUsername\">아이디:</label> <input type=\"text\"\r\n");
      out.write("                                                        id=\"signupUsername\" name=\"signupUsername\"\r\n");
      out.write("                                                        placeholder=\"6~12글자의 알파벳과 숫자로 이루어진 아이디\" required><br>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"signupPassword\">비밀번호:</label> <input type=\"password\"\r\n");
      out.write("                                                         id=\"signupPassword\" name=\"signupPassword\"\r\n");
      out.write("                                                         placeholder=\"8~20글자의 숫자와 알파벳 조합\" required><br> <label\r\n");
      out.write("          for=\"signupPhone\">전화번호:</label> <input type=\"text\"\r\n");
      out.write("                                                 id=\"signupPhone\" name=\"signupPhone\"\r\n");
      out.write("                                                 placeholder=\"전화번호를 입력하세요 (예: 010-1234-5678)\" required><br>\r\n");
      out.write("\r\n");
      out.write("        <button type=\"submit\" id=\"signUpButton\" onclick=\"return false;\">회원가입</button>\r\n");
      out.write("      </form>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
